//
// Created by thomas on 18/03/19.
//

#ifndef FRR_UBPF_PLUGINS_ID_H
#define FRR_UBPF_PLUGINS_ID_H

typedef enum MSG_TYPE {
    BGP_TEST = 0x1,
    BPF_EXIT_SUCCESS,
    BPF_EXIT_FAILURE,
    BGP_SPEC_ERROR,   //  --> Execution error               | BGP_SPEC_* ENUMS ARE NOT
    BGP_SPEC_SUCCESS, //  --> Execution success             | USED TO HOLD ANY PLUGINS
    BGP_SPEC_COMP_1,  //  --> Execution special meaning 1   | BUT RATHER USED AS RETURN
    BGP_SPEC_COMP_2,  //  --> Execution special meaning 2   | VALUE TO INDICATE SUCCESS
    BGP_SPEC_COMP_3,  //  --> Execution special meaning 3   | FAILURE OR OTHER MEANINGS
    BGP_CONTINUE,     //  --> The code must execute the next plugin (or, the original fct)

    BGP_KEEPALIVE,
    BGP_OPEN_MSG,
    BGP_UPDATE_TIME_MSG,
    BGP_PREFIX_UPDATE,
    BGP_PREFIX_UPDATE_TEST,
    BGP_PREFIX_WITHDRAW,
    BGP_ASPATH_SEND,
    BGP_DECISION_PROCESS,
    BGP_INVALID_UPDATE_INBOUND,
    BGP_INPUT_FILTER_APPLY_PROC,
    BGP_OUTPUT_FILTER_APPLY_PROC,
    BGP_DECISION_WEIGHT,
    BGP_DECISION_LOCAL_PREF,
    BGP_DECISION_LOCAL_ROUTE,
    BGP_DECISION_ASPATH,
    BGP_DECISION_ORIGIN_CHECK,
    BGP_DECISION_MED_CHECK,
    BGP_DECISION_PEER_TYPE,
    BGP_DECISION_CONFED_CHECK,
    BGP_DECISION_IGP_ALL,
    BGP_DECISION_IGP,
    BGP_DECISION_MAX_PATH,
    BGP_DECISION_SAME_IGP,
    BGP_DECISION_PREFER_FIRST_PATH,
    BGP_DECISION_ROUTE_ID,
    BGP_DECISION_CLUSTER_ID_CMP,
    BGP_DECISION_NEIGHBOR_ADDR_CMP,
    ZEBRA_UBPF_ANNOUNCE_PREFIX,
    ZEBRA_UBPF_RM_PREFIX,

    /* OSPF RELATED INSERTION POINT ID */
    OSPF_SPF_NEXT,
    OSPF_SPF_CALCULATE,
    OSPF_LSA_FLOOD,
    OSPF_ISM_CHANGE,
    OSPF_HELLO_SEND,

    BGP_NOT_ASSIGNED_TO_ANY_FUNCTION,
} plugin_type_t;

#endif //FRR_UBPF_PLUGINS_ID_H
